{"version":3,"sources":["components/Broker/FindOptimalPricing/FindOptimalPricing.js","components/ChooseDataset/ChooseDataset.js","components/BasePrice/BasePrice.js","components/PrivacySensitivity/PrivacySensitivity.js","components/Owner/ChooseData/ChooseData.js","components/Owner/CompensationData/CompensationData.js","components/Owner/Epsilon/Epsilon.js","components/Owner/SampleNumber/SampleNumber.js","components/Owner/CompensationAlg/CompensationAlg.js","components/Owner/Owner.js","components/Broker/AddData/EditableTable.js","components/Broker/TrainedModel/TrainedModel.js","components/Broker/ChooseAMPAlg/ChooseAMPAlg.js","components/Broker/BrokerBudget/BrokerBudget.js","components/Broker/PriceSandMaxRAlg/PriceSandMaxRAlg.js","components/Broker/RunAMPAlg/RunAMPAlg.js","components/Broker/Broker.js","components/Buyer/SearchModel/SearchModel.js","components/Buyer/ModelData/ModelData.js","components/Buyer/CoverageExpt/CoverageExpt.js","components/Buyer/CoverageSens/CoverageSens.js","components/Buyer/NoiseExpt/NoiseExpt.js","components/Buyer/NoiseSens/NoiseSens.js","components/Buyer/TotalBudget/TotalBudget.js","components/Buyer/Buyer.js","App.js","reportWebVitals.js","index.js"],"names":["Option","Select","ChooseDataset","handleChange","value","props","chosenDataset","PubSub","publish","className","allowClear","placeholder","style","width","onChange","this","Component","BasePrice","basePrice","span","min","step","precision","formatter","replace","parser","PrivacySensitivity","privacySensitivity","cancerColumns","title","dataIndex","fixed","key","chessColumns","irisColumns","nullColumns","ChooseData","state","selectedRowKeys","loading","handleAllData","rawData","processedData","map","item","fields","pk","onSelectChange","setState","chosenData","clearSelected","setTimeout","randomGenerate","data","selected","i","Math","floor","random","length","dataset","allData","loadingTable","column","rowSelection","hasSelected","marginBottom","marginLeft","fontSize","type","onClick","disabled","float","display","size","dataSource","bordered","columns","scroll","x","pagination","defaultPageSize","pageSizeOptions","columnsp","sorter","compare","a","b","sv","multiple","ellipsis","showTitle","render","placement","price","columnsn","CompensationData","filters","extra","divideData","compensationData","resData","pData","nData","label","res","id","p","n","margin","clear","gutter","hideOnSinglePage","pageSize","Epsilon","epsilon","SampleNumber","sampleNumber","CompensationAlg","setLoading","flag","calCompensation","comParams","bp","ps","eps","sample","judgeInput","axios","post","then","response","compensationValue","payload","error","console","log","message","info","block","Owner","chosenDataKey","imgName","getChosenDataset","getAllData","get","getChosenDataKey","getBasePrice","getPrivacySensitivity","getEpsilon","getSampleNumber","getCompensationData","diagnosis","name","marginTop","orientation","height","src","originData","EditableCell","editing","inputType","children","record","index","restProps","inputNode","Item","rules","required","EditableTable","Form","useForm","form","useState","setData","totalCount","setTotalCount","editingKey","setEditingKey","surveyData","isEditing","useEffect","deleteRow","nowData","filter","save","validateFields","row","newData","findIndex","splice","push","mergedColumns","editable","text","_","href","marginRight","onConfirm","Link","setFieldsValue","edit","col","onCell","component","components","body","cell","rowClassName","model","p1","p2","p3","p4","p5","p6","nullColumn","FindOptimalPricing","formData","max_r","j","point","formColumn","len","dynamicCol","align","dynamicColumn","TrainedModel","releaseModel","herf","ChooseAMPRAlg","ampAlg","BrokerBudget","budget","textAlign","PriceSandMaxRAlg","start","survey","formSurveyData","psmrAlgResult","pri","RunAMPRAlg","runAMPAlg","ampParams","shapley_mode","ampAllAlg","ampShapleyAlg","num_repeats","coverage","ampAlgResult","Broker","complete_ps","getSurveyData","getPSMRAlgResult","complete_price_space","max_revenue","getBudget","getAMPAlg","getAMPAlgResult","formAMPParams","token","subscribe","msgObj","token1","token2","unsubscribe","SearchModel","searchParams","undefined","modelExp","modelAll","modelData","covexp","covsen","noiexp","noisen","color","suggestion","toUpperCase","ModelData","handleData","handled","CoverageExpt","coverageExpt","CoverageSens","coverageSens","NoiseExpt","noiseExpt","NoiseSens","noiseSens","TotalBudget","totalBudget","Buyer","getCoverageExpt","getCoverageSens","getNoiseExpt","getNoiseSens","getTotalBudget","getModelData","formSearchParams","App","headStyle","backgroundColor","bodyStyle","border","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a1fe1f5f.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Table, Tooltip } from 'antd'\r\n\r\nconst columns = [\r\n    {\r\n        title: 'Model',\r\n        dataIndex: 'model',\r\n        key: 'model',\r\n        fixed: 'left',\r\n        width: 60,\r\n        // filters: [\r\n        //     {\r\n        //         text: 'Joe',\r\n        //         value: 'Joe',\r\n        //     },\r\n        //     {\r\n        //         text: 'John',\r\n        //         value: 'John',\r\n        //     },\r\n        // ],\r\n        // onFilter: (value, record) => record.name.indexOf(value) === 0,\r\n    },\r\n    {\r\n        title: 'the jth lowest price point',\r\n        children: [\r\n            {\r\n                title: '1',\r\n                dataIndex: 'p1',\r\n                key: '1',\r\n                //width: 50,\r\n                sorter: (a, b) => a.p1 - b.p1,\r\n            },\r\n            {\r\n                title: '2',\r\n                dataIndex: 'p2',\r\n                key: '2',\r\n                //width: 50,\r\n                sorter: (a, b) => a.p2 - b.p2,\r\n            },\r\n            {\r\n                title: '3',\r\n                dataIndex: 'p3',\r\n                key: '3',\r\n                //width: 50,\r\n                sorter: (a, b) => a.p3 - b.p3,\r\n            },\r\n            {\r\n                title: '4',\r\n                dataIndex: 'p4',\r\n                key: '4',\r\n                //width: 50,\r\n                sorter: (a, b) => a.p4 - b.p4,\r\n            },\r\n            {\r\n                title: '5',\r\n                dataIndex: 'p5',\r\n                key: '5',\r\n                //width: 50,\r\n                sorter: (a, b) => a.p5 - b.p5,\r\n            },\r\n            {\r\n                title: '6',\r\n                dataIndex: 'p6',\r\n                key: '6',\r\n                //width: 50,\r\n                sorter: (a, b) => a.p6 - b.p6,\r\n            },\r\n        ],\r\n    }\r\n];\r\n\r\nconst data = [];\r\nfor (let i = 0; i < 27; i++) {\r\n    data.push({\r\n        key: i,\r\n        model: 'M' + i,\r\n        p1: i + 1,\r\n        p2: i - 1,\r\n        p3: i - 5,\r\n        p4: i + 6,\r\n        p5: i,\r\n        p6: i + 3,\r\n    });\r\n}\r\n\r\nconst nullColumn = [\r\n    {\r\n        title: 'Model',\r\n        dataIndex: 'model',\r\n        key: 'model',\r\n        fixed: 'left',\r\n        width: 60,\r\n    },\r\n    {\r\n        title: 'the jth lowest price point',\r\n        children: [\r\n        ],\r\n    }\r\n];\r\n\r\nexport default class FindOptimalPricing extends Component {\r\n\r\n    formData = (max_r) => {\r\n        //console.log(\"待处理数据\", max_r);\r\n        let res = [], j = 0;\r\n        max_r.map((item) => {\r\n            let point = {}, i = 0;\r\n            item.map((index) => {\r\n                //console.log(\"index\", index);\r\n                point[`_${++i}`] = index;\r\n            });\r\n            //console.log(\"point\", point);\r\n            res = [...res, { model: 'M' + j++, ...point}];\r\n        });\r\n        //console.log(\"处理后数据\", res);\r\n        return res;\r\n    }\r\n\r\n    formColumn = (len) => {\r\n        let dynamicCol = [], i = 0;\r\n        if(!len) \r\n            return ;        \r\n        len.map((item) => {\r\n            dynamicCol = [...dynamicCol, {\r\n                title: `${i + 1}`,\r\n                dataIndex: '_' + (i+1),\r\n                key: i + 1,\r\n                //sorter: (a, b) => `a.p${i+1} - b.p${i+1}`,\r\n                align: 'center',\r\n                ellipsis: {\r\n                    showTitle: false,\r\n                },\r\n                render: value => (\r\n                    <Tooltip placement=\"topLeft\" title={value}>\r\n                        {value}\r\n                    </Tooltip>\r\n                ),\r\n            }];\r\n            i++;\r\n        })\r\n        //console.log(\"dynamicCol\",dynamicCol);\r\n        let rescolumns = [\r\n            {\r\n                title: 'Model',\r\n                dataIndex: 'model',\r\n                key: 'model',\r\n                fixed: 'left',\r\n                width: 60,\r\n            },\r\n            {\r\n                title: 'the jth lowest price point',\r\n                children: \r\n                    dynamicCol\r\n                ,\r\n            }\r\n        ];\r\n        //console.log(\"rescolumns\", rescolumns);\r\n        return rescolumns;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        //获取并处理数据\r\n        const { max_r } = this.props;\r\n        const dataSource = this.formData(max_r);\r\n        const dynamicColumn = this.formColumn(max_r[0]);\r\n\r\n        return (\r\n            <div className={'singleDisplayGrid'} >\r\n                <p className={'optionName'}>Find Optimal Pricing ：</p>\r\n                <Table columns={!dynamicColumn ? nullColumn: dynamicColumn} dataSource={dataSource} bordered size=\"small\" \r\n                    pagination= {{pageSize: 6}} scroll={{ x: 60}}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport PubSub from 'pubsub-js'\r\nimport { Select } from 'antd'\r\n\r\nconst { Option } = Select\r\n\r\nexport default class ChooseDataset extends Component {\r\n\r\n    handleChange = (value) => {\r\n        this.props.chosenDataset(value);\r\n        PubSub.publish('datasetMessage', value)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={'singleDisplayGrid'}>\r\n                <p className={'optionName'}>Choose Dataset ：</p>\r\n                <Select allowClear placeholder=\"Choose a Dataset\" style={{ width: '100%' }} onChange={this.handleChange}>\r\n                    <Option value=\"cancer\">Breast Cancer</Option>\r\n                    <Option value=\"iris\">Iris</Option>\r\n                    <Option value=\"chess\">Chess</Option>\r\n                </Select>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Col, InputNumber } from 'antd'\r\nimport PubSub from 'pubsub-js'\r\n\r\nexport default class BasePrice extends Component {\r\n\r\n    onChange = (value) => {\r\n        this.props.basePrice(value);\r\n        PubSub.publish('bpMessage', value);\r\n        //console.log(value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Col span={12}>\r\n                <p className={'optionName'}>Base Price ：</p>\r\n                <InputNumber style={{ width: '100%' }} min={0} step={0.01} precision={2}\r\n                    formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                    parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n                    onChange={this.onChange} placeholder='Enter Base Price'/>\r\n            </Col>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Col, InputNumber } from 'antd'\r\nimport PubSub from 'pubsub-js'\r\n\r\nexport default class PrivacySensitivity extends Component {\r\n\r\n    onChange = (value) => {\r\n        this.props.privacySensitivity(value);\r\n        PubSub.publish('psMessage', value);\r\n        //console.log(value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Col span={12}>\r\n                <p className={'optionName'}>Privacy Sensitivity ：</p>\r\n                <InputNumber style={{ width: '100%' }}  min={0} step={0.01}\r\n                    onChange={this.onChange} placeholder='Enter Privacy Sensitivity'/>\r\n            </Col>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Table, Button } from 'antd'\r\n\r\nconst cancerColumns = [\r\n    {title: 'id',dataIndex: 'key', fixed: 'left', key: 'pk', width:50},\r\n    {title: 'radius_mean',dataIndex: 'radius_mean', key: 'radius_mean', width:100},\r\n    {title: 'texture_mean',dataIndex: 'texture_mean', key: 'texture_mean', width:110},\r\n    {title: 'perimeter_mean',dataIndex: 'perimeter_mean', key: 'perimeter_mean', width:130},\r\n    {title: 'area_mean',dataIndex: 'area_mean', key: 'area_mean', width:100},\r\n    {title: 'smoothness_mean',dataIndex: 'smoothness_mean', key: 'smoothness_mean', width:140},\r\n    {title: 'compactness_mean',dataIndex: 'compactness_mean', key: 'compactness_mean', width:150},\r\n    {title: 'concavity_mean',dataIndex: 'concavity_mean', key: 'concavity_mean', width:120},\r\n    {title: 'concave_points_mean',dataIndex: 'concave_points_mean', key: 'concave_points_mean', width:160},\r\n    {title: 'symmetry_mean',dataIndex: 'symmetry_mean', key: 'symmetry_mean', width:130},\r\n    {title: 'fractal_dimension_mean',dataIndex: 'fractal_dimension_mean', key: 'fractal_dimension_mean', width:180},\r\n    {title: 'radius_se',dataIndex: 'radius_se', key: 'radius_se', width:100},\r\n    {title: 'texture_se',dataIndex: 'texture_se', key: 'texture_se', width:100},\r\n    {title: 'perimeter_se',dataIndex: 'perimeter_se', key: 'perimeter_se', width:100},\r\n    {title: 'area_se',dataIndex: 'area_se', key: 'area_se', width:100},\r\n    {title: 'smoothness_se',dataIndex: 'smoothness_se', key: 'smoothness_se', width:120},\r\n    {title: 'compactness_se',dataIndex: 'compactness_se', key: 'compactness_se', width:120},\r\n    {title: 'concavity_se',dataIndex: 'concavity_se', key: 'concavity_se', width:100},\r\n    {title: 'concave_points_se',dataIndex: 'concave_points_se', key: 'concave_points_se', width:150},\r\n    {title: 'symmetry_se',dataIndex: 'symmetry_se', key: 'symmetry_se', width:100},\r\n    {title: 'fractal_dimension_se',dataIndex: 'fractal_dimension_se', key: 'fractal_dimension_se', width:160},\r\n    {title: 'radius_worst',dataIndex: 'radius_worst', key: 'radius_worst', width:100},\r\n    {title: 'texture_worst',dataIndex: 'texture_worst', key: 'texture_worst', width:120},\r\n    {title: 'perimeter_worst',dataIndex: 'perimeter_worst', key: 'perimeter_worst', width:130},\r\n    {title: 'area_worst',dataIndex: 'area_worst', key: 'area_worst', width:100},\r\n    {title: 'smoothness_worst',dataIndex: 'smoothness_worst', key: 'smoothness_worst', width:140},\r\n    {title: 'compactness_worst',dataIndex: 'compactness_worst', key: 'compactness_worst', width:150},\r\n    {title: 'concavity_worst',dataIndex: 'concavity_worst', key: 'concavity_worst', width:130},\r\n    {title: 'concave_points_worst',dataIndex: 'concave_points_worst', key: 'concave_points_worst', width:160},\r\n    {title: 'symmetry_worst',dataIndex: 'symmetry_worst', key: 'symmetry_worst', width:130},\r\n    {title: 'diagnosis',dataIndex: 'diagnosis', key: 'diagnosis', width:100},\r\n];\r\n\r\nconst chessColumns = [\r\n    {title: 'id',dataIndex: 'key', fixed: 'left', key: 'pk', width:50},\r\n    {title: 'arr1',dataIndex: 'arr1', key: 'arr1', width:50},\r\n    {title: 'arr2',dataIndex: 'arr2', key: 'arr2', width:50},\r\n    {title: 'arr3',dataIndex: 'arr3', key: 'arr3', width:50},\r\n    {title: 'arr4',dataIndex: 'arr4', key: 'arr4', width:50},\r\n    {title: 'arr5',dataIndex: 'arr5', key: 'arr5', width:50},\r\n    {title: 'arr6',dataIndex: 'arr6', key: 'arr6', width:50},\r\n    {title: 'arr7',dataIndex: 'arr7', key: 'arr7', width:50},\r\n    {title: 'arr8',dataIndex: 'arr8', key: 'arr8', width:50},\r\n    {title: 'arr9',dataIndex: 'arr9', key: 'arr9', width:50},\r\n    {title: 'arr10',dataIndex: 'arr10', key: 'arr10', width:60},\r\n    {title: 'arr11',dataIndex: 'arr11', key: 'arr11', width:60},\r\n    {title: 'arr12',dataIndex: 'arr12', key: 'arr12', width:60},\r\n    {title: 'arr13',dataIndex: 'arr13', key: 'arr13', width:60},\r\n    {title: 'arr14',dataIndex: 'arr14', key: 'arr14', width:60},\r\n    {title: 'arr15',dataIndex: 'arr15', key: 'arr15', width:60},\r\n    {title: 'arr16',dataIndex: 'arr16', key: 'arr16', width:60},\r\n    {title: 'arr17',dataIndex: 'arr17', key: 'arr17', width:60},\r\n    {title: 'arr18',dataIndex: 'arr18', key: 'arr18', width:60},\r\n    {title: 'arr19',dataIndex: 'arr19', key: 'arr19', width:60},\r\n    {title: 'arr20',dataIndex: 'arr20', key: 'arr20', width:60},\r\n    {title: 'arr21',dataIndex: 'arr21', key: 'arr21', width:60},\r\n    {title: 'arr22',dataIndex: 'arr22', key: 'arr22', width:60},\r\n    {title: 'arr23',dataIndex: 'arr23', key: 'arr23', width:60},\r\n    {title: 'arr24',dataIndex: 'arr24', key: 'arr24', width:60},\r\n    {title: 'arr25',dataIndex: 'arr25', key: 'arr25', width:60},\r\n    {title: 'arr26',dataIndex: 'arr26', key: 'arr26', width:60},\r\n    {title: 'arr27',dataIndex: 'arr27', key: 'arr27', width:60},\r\n    {title: 'arr28',dataIndex: 'arr28', key: 'arr28', width:60},\r\n    {title: 'arr29',dataIndex: 'arr29', key: 'arr29', width:60},\r\n    {title: 'arr30',dataIndex: 'arr30', key: 'arr30', width:60},\r\n    {title: 'arr31',dataIndex: 'arr31', key: 'arr31', width:60},\r\n    {title: 'arr32',dataIndex: 'arr32', key: 'arr32', width:60},\r\n    {title: 'arr33',dataIndex: 'arr33', key: 'arr33', width:60},\r\n    {title: 'arr34',dataIndex: 'arr34', key: 'arr34', width:60},\r\n    {title: 'arr35',dataIndex: 'arr35', key: 'arr35', width:60},\r\n    {title: 'label',dataIndex: 'label', key: 'label', width:60},\r\n];\r\n\r\nconst irisColumns = [\r\n    {title: 'id',dataIndex: 'key', fixed: 'left', key: 'pk', width:50},\r\n    {title: 'sepallength',dataIndex: 'sepallength', key: 'sepallength'},\r\n    {title: 'sepalwidth',dataIndex: 'sepalwidth', key: 'sepalwidth'},\r\n    {title: 'label',dataIndex: 'label', key: 'label'},\r\n];\r\n\r\nconst nullColumns = [\r\n    {title: ' ', dataIndex: ' ',},\r\n];\r\n\r\nexport default class ChooseData extends Component {\r\n\r\n    state = {\r\n        selectedRowKeys: [], // Check here to configure the default column\r\n        loading: false,\r\n    };\r\n\r\n    //对传输过来的原数据进行处理\r\n    handleAllData = (rawData) => {\r\n        //console.log(\"开始处理数据\", rawData);\r\n        let processedData = [];\r\n        if(rawData) {\r\n            rawData.map((item) => {\r\n                item.fields.pk = item.pk;\r\n                item.fields.key = item.pk;\r\n                processedData = [...processedData, item.fields];\r\n                return ;\r\n            })\r\n        }\r\n        //console.log(\"处理后数据\", allData);\r\n        return processedData;\r\n    }\r\n\r\n    //选择数据\r\n    onSelectChange = selectedRowKeys => {\r\n        //console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n        this.setState({ selectedRowKeys });\r\n        this.props.chosenData(selectedRowKeys);\r\n    };\r\n\r\n    //清空所选项\r\n    clearSelected = () => {\r\n        this.setState({ loading: true });\r\n        // ajax request after empty completing\r\n        //this.props.chosenData(this.state.selectedRowKeys);\r\n        setTimeout(() => {\r\n            this.setState({\r\n                selectedRowKeys: [],\r\n                loading: false,\r\n            });\r\n        }, 800);\r\n    };\r\n\r\n    //随机生成20个点\r\n    randomGenerate = (data) => {\r\n        this.setState({ loading: true });\r\n        // ajax request after empty completing\r\n        //this.props.chosenData(this.state.selectedRowKeys);\r\n        let selected = [];\r\n        for(let i=0; i<20; i++) {\r\n            selected = [...selected, Math.floor(Math.random()*(data.length))];\r\n        }\r\n        setTimeout(() => {\r\n            this.setState({\r\n                selectedRowKeys: selected,\r\n                loading: false,\r\n            });\r\n        }, 800);\r\n        this.props.chosenData(selected);\r\n    }\r\n    \r\n\r\n    render() {\r\n\r\n        // 生成数据表\r\n        const {dataset , allData, loadingTable} = this.props;\r\n        //console.log(\"数据表获取的数据 in ChooseData\", dataset, allData);\r\n        const column = (dataset === 'cancer'? cancerColumns : \r\n                        dataset === 'chess' ? chessColumns : \r\n                        dataset === 'iris' ? irisColumns : nullColumns);\r\n        const data = this.handleAllData(allData);\r\n\r\n        //获取选中的数据\r\n        const { loading, selectedRowKeys } = this.state;\r\n        const rowSelection = {\r\n            selectedRowKeys,\r\n            onChange: this.onSelectChange,\r\n        };\r\n\r\n        const hasSelected = selectedRowKeys.length > 0;\r\n\r\n\r\n        return (\r\n            <div className={'singleDisplayGrid'}>\r\n                <p className={'optionName'}>Choose Data From the Dataset :</p>\r\n                <div style={{ 'display':'block' }}>\r\n                    <div style={{ marginBottom: 16 }}>\r\n                        <span style={{ marginLeft: 8, fontSize: '90%'}}>\r\n                            {hasSelected ? `Selected ${selectedRowKeys.length} items` : ''}\r\n                        </span>\r\n                        <Button type=\"primary\" onClick={this.clearSelected} disabled={!hasSelected} \r\n                            loading={loading} style={{ float: 'right', display: !hasSelected ? 'none':'block'}} \r\n                            size='small' className=\"colorBtn\" >\r\n                            Clear\r\n                        </Button>\r\n                        <Button type=\"primary\" onClick={() => this.randomGenerate(data)} disabled={hasSelected}  \r\n                            loading={loading} style={{ float: 'right', display: hasSelected ? 'none':'block'}} \r\n                            size='small' className=\"colorBtn\">\r\n                            Random (20)\r\n                        </Button>\r\n                    </div>\r\n                    <Table rowSelection={rowSelection}  dataSource={data} size='small' bordered\r\n                        columns={column} scroll={{ x: 40 }} loading={loadingTable}\r\n                        pagination={{defaultPageSize: 2, pageSizeOptions:[2,3,5,10,20,50,100]}}\r\n                        /> \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Table, Row, Col, Tooltip } from 'antd'\r\n\r\nconst columnsp = [\r\n    {\r\n        title: 'P',\r\n        dataIndex: 'p',\r\n        width : 50,\r\n    },\r\n    // {\r\n    //     title: 'ID',\r\n    //     dataIndex: 'id',\r\n    //     width : 50,\r\n    // },\r\n    {\r\n        title: 'SV',\r\n        dataIndex: 'sv',\r\n        sorter: {\r\n            compare: (a, b) => a.sv - b.sv,\r\n            multiple: 1,\r\n        },\r\n        //align: 'center',\r\n        ellipsis: {\r\n            showTitle: false,\r\n        },\r\n        render: value => (\r\n            <Tooltip placement=\"topLeft\" title={value}>\r\n                {value}\r\n            </Tooltip>\r\n        ),\r\n    },\r\n    {\r\n        title: 'Price',\r\n        dataIndex: 'price',\r\n        ellipsis: true,\r\n        sorter: {\r\n            compare: (a, b) => a.price - b.price,\r\n            multiple: 1,\r\n        },\r\n        //align: 'center',\r\n        ellipsis: {\r\n            showTitle: false,\r\n        },\r\n        render: value => (\r\n            <Tooltip placement=\"topLeft\" title={value}>\r\n                {value}\r\n            </Tooltip>\r\n        ),\r\n    }\r\n];\r\n\r\nconst columnsn = [\r\n    {\r\n        title: 'N',\r\n        dataIndex: 'n',\r\n        width : 60,\r\n    },\r\n    // {\r\n    //     title: 'ID',\r\n    //     dataIndex: 'id',\r\n    //     width : 50,\r\n    // },\r\n    {\r\n        title: 'SV',\r\n        dataIndex: 'sv',\r\n        sorter: {\r\n            compare: (a, b) => a.value - b.value,\r\n            multiple: 1,\r\n        },\r\n        //align: 'center',\r\n        ellipsis: {\r\n            showTitle: false,\r\n        },\r\n        render: value => (\r\n            <Tooltip placement=\"topLeft\" title={value}>\r\n                {value}\r\n            </Tooltip>\r\n        ),\r\n    },\r\n    {\r\n        title: 'Price',\r\n        dataIndex: 'price',\r\n        sorter: {\r\n            compare: (a, b) => a.price - b.price,\r\n            multiple: 1,\r\n        },\r\n        //align: 'center',\r\n        ellipsis: {\r\n            showTitle: false,\r\n        },\r\n        render: value => (\r\n            <Tooltip placement=\"topLeft\" title={value}>\r\n                {value}\r\n            </Tooltip>\r\n        ),\r\n    }\r\n];\r\n\r\n\r\n\r\nexport default class CompensationData extends Component {\r\n\r\n    onChange = (pagination, filters, sorter, extra) => {\r\n        //console.log('params', pagination, filters, sorter, extra);\r\n    }\r\n\r\n    divideData = (compensationData) => {\r\n        //console.log(\"CompensationData表格获取的参数\",compensationData);\r\n        let resData = { pData:[], nData:[] };\r\n        if(compensationData) {\r\n            compensationData.map((item) => {\r\n                if(item.label === 0) {\r\n                    const res = {\r\n                        key: item.id,\r\n                        p: 'P' + item.id,\r\n                        id: item.id,\r\n                        sv: item.sv,\r\n                        price: item.price\r\n                    }\r\n                    resData.pData = [ ...resData.pData, res];\r\n                } else if (item.label === 1){\r\n                    const res = {\r\n                        key: item.id,\r\n                        n: 'N' + item.id,\r\n                        id: item.id,\r\n                        sv: item.sv,\r\n                        price: item.price\r\n                    }\r\n                    resData.nData = [ ...resData.nData, res];\r\n                }\r\n            })\r\n        }\r\n        return resData;\r\n    }\r\n\r\n    render() {\r\n\r\n        //获取原始数据并加工\r\n        const { compensationData } = this.props;\r\n        //console.log(\"传入Compensation表格的数据,\", compensationData);\r\n        const divideData = this.divideData(compensationData);\r\n\r\n        return (\r\n            // <div className={'singleDisplayGrid'}>\r\n            <div style={{ margin:\"7% auto 0\" }}>\r\n                <p className={'optionName'}>Chosen Data ：</p>\r\n                <div style={{clear:'both'}}>\r\n                    <Row gutter={6}>\r\n                        <Col span={12}>\r\n                            <Table columns={columnsp} dataSource={divideData.pData} onChange={this.onChange} \r\n                                pagination={{hideOnSinglePage:true, pageSize: 5}} size='small' bordered/>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <Table columns={columnsn} dataSource={divideData.nData} onChange={this.onChange} \r\n                                pagination={{hideOnSinglePage:true, pageSize: 5}} size='small' bordered/>\r\n                        </Col>    \r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Col, InputNumber } from 'antd'\r\n\r\nexport default class Epsilon extends Component {\r\n\r\n    onChange = (value) => {\r\n        this.props.epsilon(value);\r\n        //console.log(value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Col span={12}>\r\n                <p className={'optionName'}>Epsilon ：</p>\r\n                <InputNumber style={{ width: '100%' }}  min={0} step={0.01}\r\n                    onChange={this.onChange} placeholder='Enter Epsilon'/>\r\n            </Col>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Col, InputNumber } from 'antd'\r\n\r\nexport default class SampleNumber extends Component {\r\n\r\n    onChange = (value) => {\r\n        this.props.sampleNumber(value);\r\n        //console.log(value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Col span={12}>\r\n                <p className={'optionName'}>Sample Number ：</p>\r\n                <InputNumber style={{ width: '100%' }}  min={0} step={1} precision={0}\r\n                    onChange={this.onChange} placeholder='Enter Sample Number'/>\r\n            </Col>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Button, message } from 'antd'\r\nimport axios from 'axios'\r\n\r\nexport default class CompensationAlg extends Component {\r\n\r\n    state = {\r\n        loading: false,\r\n    }\r\n\r\n    setLoading = (flag) => {\r\n        this.setState({loading: flag});\r\n    };\r\n\r\n    calCompensation = () => {\r\n        //设置loading效果\r\n        this.setLoading(true);\r\n        //发送计算请求\r\n        const { dataset, id, bp, ps, eps, sample} = this.props.comParams;\r\n        const flag = this.judgeInput( dataset, id, bp, ps, eps, sample);\r\n        if(flag === false) {\r\n            this.setLoading(false);\r\n            return ;\r\n        }\r\n        //console.log(\"传入Compensation的id\", id);\r\n        axios.post('http://47.114.83.154:8080/shapley', {\r\n            \"dataset\": dataset,\r\n            \"id\": id,\r\n            \"bp\": bp,\r\n            \"ps\": ps,\r\n            \"eps\": eps,\r\n            \"sample\": sample\r\n        }).then(\r\n            response => {\r\n                //console.log(\"计算Compensation成功，返回值\", response.data);\r\n                this.props.compensationValue(response.data.payload);\r\n                this.setLoading(false);\r\n            },\r\n            error => {\r\n                console.log(\"计算Compensation失败\", error);\r\n                this.setLoading(false);\r\n            }\r\n        );\r\n    };\r\n\r\n    judgeInput = ( dataset, id, bp, ps, eps, sample ) => {\r\n        if(dataset === null || id.length === 0) {\r\n            this.setLoading(false);\r\n            message.info(\"Please choose the dataset and data\");\r\n            return false;\r\n        }\r\n        if(bp === null || ps === null || eps === null || sample === null) {\r\n            this.setLoading(false);\r\n            message.info(\"Please enter all items\");\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { loading } = this.state\r\n\r\n        return (\r\n            <div style={{ margin:'9% auto 10%'}}>\r\n                <Button type=\"primary\" className=\"colorBtn\" block loading={loading} onClick={this.calCompensation}>Begin</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Divider, Image, Row, } from 'antd'\r\nimport axios from 'axios'\r\nimport ChooseDataset from '../ChooseDataset/ChooseDataset'\r\nimport BasePrice from '../BasePrice/BasePrice'\r\nimport PrivacySensitivity from '../PrivacySensitivity/PrivacySensitivity'\r\nimport ChooseData from './ChooseData/ChooseData'\r\nimport CompensationData from './CompensationData/CompensationData'\r\n\r\nimport Epsilon from './Epsilon/Epsilon'\r\nimport SampleNumber from './SampleNumber/SampleNumber'\r\nimport CompensationAlg from './CompensationAlg/CompensationAlg'\r\n\r\nexport default class Owner extends Component {\r\n\r\n    state = {\r\n        dataset: '',\r\n        allData: [],\r\n        chosenDataKey: [],\r\n        bp: null,\r\n        ps: null,\r\n        eps: null,\r\n        sample: null,\r\n        compensationData: null,\r\n        // imgname: '',\r\n        imgName: '',\r\n        loadingTable: false\r\n    }\r\n\r\n    //接收组件返回的数据集名称\r\n    getChosenDataset = (dataset) => {\r\n        console.log('ChooseDataset组件返回的数据集', dataset);\r\n        this.setState({allData: null});\r\n        this.setState({loadingTable: true});\r\n        this.getAllData(dataset);\r\n    }\r\n\r\n    //发送请求获取 数据\r\n    getAllData = (dataset) => {\r\n        axios.get(`http://47.114.83.154:8080/${dataset}/all`).then(\r\n\t\t\tresponse => {\r\n                this.setState({dataset:dataset, allData:response.data.payload, loadingTable: false});\r\n                //console.log(\"请求成功，向数据表传入的数据 in getAllData\", this.state.dataset, this.state.allData);\r\n            },\r\n\t\t    error => {\r\n                //console.log(\"获取数据失败，向数据表传入的数据 in getAllData\", this.state.dataset, this.state.allData);\r\n            }\r\n        )\r\n    }\r\n\r\n    //获取已选数据\r\n    getChosenDataKey = (chosenDataKey) => {\r\n        //console.log(\"Owner收到选取的数据\", chosenDataKey);\r\n        this.setState({chosenDataKey});\r\n    }\r\n\r\n    //获取BasePrice\r\n    getBasePrice = (bp) => {\r\n        this.setState({bp});\r\n    }\r\n\r\n    //获取PrivacySensitivity\r\n    getPrivacySensitivity = (ps) => {\r\n        this.setState({ps});\r\n    }\r\n\r\n    //获取Epsilon\r\n    getEpsilon = (eps) => {\r\n        this.setState({eps});\r\n    }\r\n\r\n    //获取SampleNumber\r\n    getSampleNumber = (sample) => {\r\n        this.setState({sample});\r\n    }\r\n\r\n    //获取所有点的compensationValue，并形成compensationData(预处理，准备好label)\r\n    getCompensationData = (compensationValue) => {\r\n        console.log(\"获取的值 compensationValue\", compensationValue);\r\n        let resData = [];\r\n        const { allData, dataset, chosenDataKey } = this.state;\r\n        //console.log(\"alldata\", allData, \"chosenDataKey\", chosenDataKey);\r\n        if(!allData || !dataset || !chosenDataKey)\r\n            return ;\r\n        chosenDataKey.map((item) => {\r\n            resData = [...resData, {\r\n                id: item,\r\n                label: dataset==='cancer'? allData[item].fields.diagnosis:allData[item].fields.label,\r\n                sv: compensationValue.sv[item],\r\n                price: compensationValue.price[item],\r\n            }]\r\n        });\r\n        this.setState({ compensationData: resData});\r\n        //this.setState({ imgname: compensationValue.name });\r\n        this.setState({ imgName: compensationValue.name});\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        //数据表所需\r\n        const { dataset, allData, loadingTable } = this.state;\r\n        //console.log(\"再次确认传入的数据\", dataset, allData)\r\n\r\n        //计算compensation所需，形成参数\r\n        const { chosenDataKey, bp, ps, eps, sample } = this.state;\r\n        const comParams = { dataset: dataset, id:chosenDataKey, bp:bp, ps:ps , eps:eps, sample: sample};\r\n        //console.log(\"计算参数comParams\", comParams);\r\n\r\n        //展示compensation所需\r\n        const { compensationData } = this.state;\r\n\r\n        //展示img所需\r\n        const { imgName } = this.state;\r\n\r\n        return (\r\n            <div className={'panel'}>     \r\n\r\n                <ChooseDataset chosenDataset={this.getChosenDataset}/>\r\n\r\n                <ChooseData dataset={dataset} allData={allData} loadingTable={loadingTable} chosenData={this.getChosenDataKey}/>\r\n\r\n                {/* <div style={{ marginTop : ( !allData ? '4%' : '9%') }}> */}\r\n                <div style={{ marginTop : '4%' }}>\r\n                    <Row gutter={12}>\r\n                        <BasePrice basePrice={this.getBasePrice}/>\r\n                        <PrivacySensitivity privacySensitivity={this.getPrivacySensitivity}/>\r\n                    </Row>\r\n                    <Row gutter={12} style={{ marginTop: '2%'}}>\r\n                        <Epsilon epsilon={this.getEpsilon}/>\r\n                        <SampleNumber sampleNumber={this.getSampleNumber}/>\r\n                    </Row>\r\n                </div>\r\n\r\n                <CompensationAlg comParams={comParams} compensationValue={this.getCompensationData}/>\r\n                \r\n                <Divider orientation=\"middle\"></Divider>\r\n                \r\n                <CompensationData compensationData={compensationData}/>\r\n\r\n                <div style={{ margin: !compensationData? '9% auto 0':'5% auto 0' }} >\r\n                    <p className={'optionName'} style={{marginBottom:'0%'}}>Shapley Value ：</p>\r\n                    <Image width={'100%'} height={\"50%\"} src={ imgName === ''? \"http://47.114.83.154/images/empty.svg\": `http://47.114.83.154/images/${imgName}.svg`}/>\r\n                    {/* <Image width={'100%'} height={\"50%\"} src={ imgnameRandom === ''? \"http://47.114.83.154/empty.svg\": `http://47.114.83.154/sv.svg?${imgnameRandom}`}/> */}\r\n                    {/* <Image width={'100%'} src={ imgname === ''? \"http://59.111.99.144/empty.svg\":\"http://59.111.99.144/\" + imgname +\".svg\"}/> */}\r\n                </div>\r\n                \r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, Table, Input, InputNumber, Popconfirm, Form, Typography, message } from 'antd';\r\n\r\nconst originData = [];\r\n  \r\nconst EditableCell = ({\r\n    editing,\r\n    dataIndex,\r\n    title,\r\n    inputType,\r\n    record,\r\n    index,\r\n    children,\r\n    ...restProps\r\n}) => {\r\n    const inputNode = inputType === 'epsilon' ? \r\n        <InputNumber style={{ width: '100%' }} min={0} step={0.01} /> \r\n        : inputType === 'price' ?\r\n            <InputNumber style={{ width: '100%' }} min={0} step={0.01} precision={2}\r\n                formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                parser={value => value.replace(/\\$\\s?|(,*)/g, '')}/> \r\n            : <Input />;\r\n    return (\r\n        <td {...restProps}>\r\n            {editing ? (\r\n                <Form.Item\r\n                    name={dataIndex}\r\n                    style={{\r\n                        margin: 0,\r\n                    }}\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: `Please Input ${title}!`,\r\n                        },\r\n                    ]}\r\n                >\r\n                    {inputNode}\r\n                </Form.Item>\r\n            ) : (\r\n                children\r\n            )}\r\n        </td>\r\n    );\r\n};\r\n  \r\nexport const EditableTable = (props) => {\r\n    \r\n    const [form] = Form.useForm();\r\n    const [data, setData] = useState(originData);\r\n    const [totalCount, setTotalCount] = useState(originData.length);\r\n    const [editingKey, setEditingKey] = useState('');    //(全局)正在编辑的key值，初始化为空\r\n    const { surveyData } = props\r\n  \r\n    const isEditing = (record) => record.key === editingKey;    //判断当前记录是否在编辑中\r\n\r\n    useEffect(() => { \r\n        surveyData(data);\r\n    }, [data]);\r\n  \r\n    //编辑函数，将原始值清空\r\n    const edit = (record) => {\r\n        form.setFieldsValue({\r\n            id: '',\r\n            epsilon: '',\r\n            price: '',\r\n            ...record,\r\n        });\r\n        setEditingKey(record.key);\r\n    };\r\n  \r\n    //删除数据\r\n    const deleteRow = (key) => {\r\n        const nowData = [...data];\r\n        setData(nowData.filter((item) => {\r\n            return item.key !== key \r\n        }));\r\n        setEditingKey('');\r\n        //surveyData(data);\r\n    };\r\n\r\n    //增加数据\r\n    const addNewRow = () => {\r\n        if(editingKey==='') {\r\n            const newData = [...data, {\r\n                key: totalCount,\r\n                id: totalCount,\r\n            }];\r\n            //console.log(newData);\r\n            setData(newData);\r\n            setEditingKey(totalCount);\r\n            setTotalCount(totalCount+1);\r\n        } else {\r\n            message.info('Only one new data can be added');\r\n        }\r\n    }\r\n    \r\n    //保存数据\r\n    const save = async (key) => {\r\n        try {\r\n            const row = await form.validateFields();\r\n            const newData = [...data];\r\n            //寻找key相等的数据，有则返回key,无则返回-1\r\n            const index = newData.findIndex((item) => key === item.key);    \r\n    \r\n            if (index > -1) {\r\n                const item = newData[index];\r\n                newData.splice(index, 1, { ...item, ...row });\r\n                setData(newData);\r\n                setEditingKey('');\r\n            } else {\r\n                newData.push(row);\r\n                setData(newData);\r\n                setEditingKey('');\r\n                setTotalCount(++totalCount);\r\n            }\r\n            //surveyData(data);\r\n        } catch (errInfo) {\r\n            //console.log('Validate Failed:', errInfo);\r\n        }\r\n    };\r\n  \r\n    const columns = [\r\n        {\r\n            title: 'id',\r\n            dataIndex: 'id',\r\n            width: '15%',\r\n        },\r\n        {\r\n            title: 'epsilon',\r\n            dataIndex: 'epsilon',\r\n            width: '27%',\r\n            editable: true,\r\n        },\r\n        {\r\n            title: 'price',\r\n            dataIndex: 'price',\r\n            width: '27%',\r\n            editable: true,\r\n            render: text => {\r\n                return '$ ' + text;\r\n            }\r\n        },\r\n        {\r\n            title: 'operation',\r\n            dataIndex: 'operation',\r\n            render: (_, record) => {\r\n                const editable = isEditing(record);\r\n                return editable ? (\r\n                    <span>\r\n                        <a\r\n                            href=\"javascript:;\"\r\n                            onClick={() => save(record.key)}\r\n                            style={{\r\n                                marginRight: 8,\r\n                            }}\r\n                        >\r\n                            Save\r\n                        </a>\r\n                    <Popconfirm title=\"Sure to delete?\" onConfirm={() => deleteRow(record.key)}>\r\n                        <a>Delete</a>\r\n                    </Popconfirm>\r\n                    </span>\r\n                ) : (\r\n                    <Typography.Link disabled={editingKey !== ''} onClick={() => edit(record)}>\r\n                        Edit\r\n                    </Typography.Link>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    const mergedColumns = columns.map((col) => {\r\n        if (!col.editable) {\r\n            return col;\r\n        }\r\n    \r\n        return {\r\n            ...col,\r\n            onCell: (record) => ({\r\n                record,\r\n                inputType: col.dataIndex,\r\n                dataIndex: col.dataIndex,\r\n                title: col.title,\r\n                editing: isEditing(record),\r\n            }),\r\n        };\r\n    });\r\n\r\n    return (\r\n        <div className={'singleDisplayGrid'}>\r\n            <p className={'optionName'}>Add Survey Data ：</p>\r\n            <Button onClick={addNewRow} type=\"primary\" style={{ marginBottom: 16, float: 'right'}} \r\n                className=\"colorBtn\" size='small'>\r\n                Add Data\r\n            </Button>\r\n            <Form form={form} component={false}>\r\n                <Table\r\n                    components={{\r\n                        body: {\r\n                        cell: EditableCell,\r\n                        },\r\n                    }}\r\n                    size=\"small\"\r\n                    bordered\r\n                    dataSource={data}\r\n                    columns={mergedColumns}\r\n                    rowClassName=\"editable-row\"\r\n                    pagination={{\r\n                        onChange: deleteRow,\r\n                        // hideOnSinglePage:true, \r\n                        pageSize: 10\r\n                    }}\r\n                />\r\n            </Form>\r\n            </div>\r\n    );\r\n};\r\n","import React, { Component } from 'react'\r\nimport { Table, Space, Button, Tooltip, message } from 'antd'\r\nimport axios from 'axios'\r\n\r\nconst data2 = [\r\n    {\r\n        key: '0',\r\n        id: '0',\r\n        coverage: 'model1',\r\n        epsilon: '1%',\r\n        price: '32',\r\n        tags: ['Buy'],\r\n    },\r\n    {\r\n        key: '1',\r\n        id: '1',\r\n        epsilon: '20%',\r\n        coverage: 'model2',\r\n        price: '42',\r\n        tags: ['Buy'],\r\n    },\r\n    {\r\n        key: '3',\r\n        id: '3',\r\n        coverage: 'model3',\r\n        epsilon: '91%',\r\n        price: '87',\r\n        tags: ['Do not'],\r\n    },\r\n];\r\n\r\nexport default class TrainedModel extends Component {\r\n\r\n    releaseModel = (id) => {\r\n        axios.post('http://47.114.83.154:8080/model/release', {\r\n            id: id,\r\n        }).then(\r\n            response => {\r\n                //console.log(\"release成功\");\r\n                message.info(\"Release success\");\r\n            },\r\n            error => {\r\n                //console.log(\"release失败\");\r\n                message.info(\"Release failed\");\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n\r\n        const columns = [\r\n            {\r\n                title: 'ID',\r\n                dataIndex: 'id',\r\n                key: 'id',\r\n                width: '10%',\r\n                // render: text => <a>{text}</a>,\r\n            },\r\n            {\r\n                title: 'Epsilon',\r\n                dataIndex: 'epsilon',\r\n                key: 'epsilon',\r\n                align: 'center',\r\n                width: '17%',\r\n                ellipsis: {\r\n                    showTitle: false,\r\n                },\r\n                render: value => (\r\n                    <Tooltip placement=\"topLeft\" title={value}>\r\n                        {value}\r\n                    </Tooltip>\r\n                ),\r\n            },\r\n            {\r\n                title: 'Coverage',\r\n                dataIndex: 'coverage',\r\n                key: 'coverage',\r\n                align: 'center',\r\n                width: '25%',\r\n                ellipsis: {\r\n                    showTitle: false,\r\n                },\r\n                render: value => (\r\n                    <Tooltip placement=\"topLeft\" title={value}>\r\n                        {value}\r\n                    </Tooltip>\r\n                ),\r\n            },\r\n            {\r\n                title: 'Price',\r\n                dataIndex: 'price',\r\n                key: 'price',\r\n                align: 'center',\r\n                width: '17%',\r\n                render: (text, value) => {\r\n                    <Tooltip placement=\"topLeft\" title={value}>\r\n                        {value}\r\n                    </Tooltip>\r\n                    return '$ ' + text;\r\n                },\r\n            },\r\n            {\r\n                title: 'Action',\r\n                key: 'action',\r\n                align: 'center',\r\n                render: (text, record) => (\r\n                    <Space size={5}>\r\n                        <a herf=\"javascript:void(0);\">Download</a>\r\n                        <a herf=\"javascript:void(0);\" onClick={() => this.releaseModel(record.id)}>Release</a>\r\n                        {/* <Button type=\"link\" size=\"small\" >Download</Button>\r\n                        <Button type=\"link\" size=\"small\" onClick={() => this.releaseModel(record.id)}>Release</Button> */}\r\n                    </Space>\r\n                ),\r\n            },\r\n        ];\r\n\r\n        const { data } = this.props;\r\n\r\n        return (\r\n            <div className={'singleDisplayGrid'}>\r\n                <p className={'optionName'}>Trained Models :</p>\r\n                <div style={{clear:'both', margin: 'auto'}}>\r\n                    <Table columns={columns} dataSource={data} size='small' \r\n                        pagination={{pageSize: 5}}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Select } from 'antd'\r\n\r\nconst { Option } = Select\r\n\r\nexport default class ChooseAMPRAlg extends Component {\r\n\r\n    handleChange = (value) => {\r\n        this.props.ampAlg(value);\r\n    }\r\n    \r\n    render() {\r\n\r\n        return (\r\n            <Select placeholder='Choose an Algorithm' style={{ width: '100%' }} onChange={this.handleChange}>\r\n                <Option value=\"GREEDY\">GREEDY</Option>\r\n                <Option value=\"DP\">DP</Option>\r\n                <Option value=\"GUE-GRD\">GUE-GRD</Option>\r\n                <Option value=\"RANDOM\">RANDOM</Option>\r\n                {/* <Option value=\"ALL\">ALL</Option> */}\r\n            </Select>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { InputNumber, Col } from 'antd'\r\n\r\nexport default class BrokerBudget extends Component {\r\n\r\n    onChange = (value) => {\r\n        this.props.budget(value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={'singleDisplayGrid'} style={{textAlign:'center'}}>\r\n                <p className={'optionName'}>Enter Budget ：</p>\r\n                <InputNumber style={{ width: '100%' }} min={0} step={0.01} precision={2}\r\n                    formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                    parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n                    onChange={this.onChange} placeholder='Enter Your Budget'/>\r\n            </div>\r\n            // <Col span={24}>\r\n            //     <p className={'optionName'}>Enter Budget ：</p>\r\n            //     <InputNumber style={{ width: '100%' }} min={0} step={0.01} precision={2}\r\n            //         formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n            //         parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n            //         onChange={this.onChange} placeholder='Enter Your Budget'/>\r\n            // </Col>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Button, message } from 'antd'\r\nimport axios from 'axios'\r\n\r\nexport default class PriceSandMaxRAlg extends Component {\r\n\r\n    state = {\r\n        loading: false,\r\n    };\r\n\r\n    start = () => {\r\n        this.setState({ loading: true });\r\n        //处理数据\r\n        const survey = this.formSurveyData(this.props.surveyData);\r\n        //console.log(\"处理后数据\", survey);\r\n        //发送请求\r\n        if(survey.length === 0 || !survey) {\r\n            this.setState({ loading: false });\r\n            message.info(\"Please add survey data\");\r\n            return ;\r\n        }\r\n        axios.post('http://47.114.83.154:8080/write_survey', {\r\n            \"survey\": survey,\r\n        }).then(\r\n            response => {\r\n                //console.log(\"发送请求成功\", response.data.payload);\r\n                this.props.psmrAlgResult(response.data.payload);\r\n                this.setState({ loading: false });\r\n            },\r\n            error => {\r\n                console.log(\"发送请求失败\", error);\r\n                this.setState({ loading: false });\r\n            }\r\n        )\r\n    };\r\n\r\n    formSurveyData = (surveyData) => {\r\n        let resData = [];\r\n        surveyData.map((item) => {\r\n            resData =  [...resData, {\r\n                eps: item.epsilon,\r\n                pri: item.price,\r\n            }]\r\n        })\r\n        return resData;\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        const { loading } = this.state;\r\n        const { surveyData } = this.props;\r\n\r\n        return (\r\n            <div style={{ margin: surveyData.length === 0 ? '8% auto 0':'4% auto 0'}}>\r\n            {/* <div style={{ margin: '9% auto 0'}}> */}\r\n                <p className={'optionName'}>Revenue Maximation Algorithm ：</p>\r\n                <Button type=\"primary\" className=\"colorBtn\" block loading={loading} onClick={this.start}>Begin</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Button, message } from 'antd'\r\nimport axios from 'axios'\r\n\r\nexport default class RunAMPRAlg extends Component {\r\n\r\n    state = {\r\n        loading: false,\r\n    }\r\n\r\n    runAMPAlg = () => {\r\n        this.setState({ loading: true});\r\n        const { ampParams } = this.props;\r\n        if(!ampParams ||!ampParams.dataset || !ampParams.shapley_mode) {\r\n            message.info(\"Please choose the dataset and AMP Algorithm\");\r\n            this.setState({ loading: false});\r\n            return ;\r\n        }\r\n        if(!ampParams.price || ampParams.price.length === 0) {\r\n            message.info(\"Please add survey data and run algorithms above first\");\r\n            this.setState({ loading: false});\r\n            return ;\r\n        }\r\n        if(ampParams.shapley_mode === 'ALL') {\r\n            this.ampAllAlg(ampParams);\r\n        }else{\r\n            this.ampShapleyAlg(ampParams);\r\n        }\r\n\r\n    }\r\n\r\n    ampAllAlg = (ampParams) => {\r\n        axios.post('http://47.114.83.154:8080/amp',{\r\n            dataset: ampParams.dataset,\r\n            num_repeats: 1,\r\n            epsilon: ampParams.epsilon,\r\n        }).then(\r\n            response => {\r\n                //console.log(\"请求all成功\", response.data.payload);\r\n                let res = [], i = 0;\r\n                ampParams.price.map((item) => {\r\n                    res = [...res, {\r\n                        id: i,\r\n                        epsilon: ampParams.epsilon[i],\r\n                        coverage: 1,\r\n                        price: ampParams.price[i],\r\n                    }];\r\n                    i++;\r\n                })\r\n                this.props.ampAlgResult(res);\r\n                this.setState({ loading: false});\r\n            },\r\n            error => {\r\n                console.log(\"请求all失败\", error);\r\n                this.props.ampAlgResult('');\r\n                message.info('No result');\r\n                this.setState({ loading: false});\r\n            }\r\n        )\r\n    }\r\n\r\n    ampShapleyAlg = (ampParams) => {\r\n        if(ampParams.budget === 0 || ampParams.shapley_mode === null || ampParams.budget === null \r\n            || ampParams.bp === null || ampParams.ps === null ) {\r\n            message.info(\"Please enter the budget/ base price/ privacy sensitivity\");\r\n            this.setState({ loading: false});\r\n            return ;\r\n        }\r\n        axios.post('http://47.114.83.154:8080/amp_shapley',{\r\n            dataset: ampParams.dataset,\r\n            shapley_mode: ampParams.shapley_mode,\r\n            num_repeats: 1,\r\n            epsilon: ampParams.epsilon,\r\n            price: ampParams.price,\r\n            budget: ampParams.budget,\r\n            bp: ampParams.bp,\r\n            ps: ampParams.ps\r\n        }).then(\r\n            response => {\r\n                //console.log(\"请求\"+ampParams.shapley_mode+\"成功\", response.data.payload);\r\n                this.props.ampAlgResult(response.data.payload);\r\n                this.setState({ loading: false});\r\n            },\r\n            error => {\r\n                console.log(\"请求\"+ampParams.shapley_mode+\"失败\", error);\r\n                this.props.ampAlgResult('');\r\n                message.info('No result');\r\n                this.setState({ loading: false});\r\n            }\r\n        )\r\n    }\r\n    \r\n    render() {\r\n\r\n        const { loading } = this.state;\r\n\r\n        return (\r\n            <Button onClick={this.runAMPAlg} loading={loading} type=\"link\">OK</Button>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Col, Divider, Image, Row } from 'antd'\r\nimport PubSub from 'pubsub-js'\r\n\r\nimport { EditableTable } from './AddData/EditableTable'\r\nimport FindOptimalPricing from './FindOptimalPricing/FindOptimalPricing'\r\nimport TrainedModel from './TrainedModel/TrainedModel'\r\nimport ChooseAMPAlg from './ChooseAMPAlg/ChooseAMPAlg'\r\nimport BrokerBudget from './BrokerBudget/BrokerBudget'\r\nimport PriceSandMaxRAlg from './PriceSandMaxRAlg/PriceSandMaxRAlg'\r\nimport RunAMPRAlg from './RunAMPAlg/RunAMPAlg'\r\n\r\nexport default class Broker extends Component {\r\n\r\n    state = {\r\n        surveyData: [],\r\n        complete_ps: [],\r\n        max_r: [],\r\n        price: [],\r\n        dataset: null,\r\n        budget: null,\r\n        ampAlg: null,\r\n        ampAlgResult: [],\r\n        bp: null,\r\n        ps: null,\r\n    }\r\n\r\n    componentDidMount(){\r\n\t\tthis.token = PubSub.subscribe('datasetMessage',(_,msgObj)=>{\r\n\t\t\t//console.log(\"订阅消息\",msgObj);\r\n            this.setState({ dataset: msgObj });\r\n\t\t});\r\n        this.token1 = PubSub.subscribe('bpMessage',(_,msgObj)=>{\r\n\t\t\t//console.log(\"订阅消息\",msgObj);\r\n            this.setState({ bp: msgObj });\r\n\t\t});\r\n        this.token2 = PubSub.subscribe('psMessage',(_,msgObj)=>{\r\n\t\t\t//console.log(\"订阅消息\",msgObj);\r\n            this.setState({ ps: msgObj });\r\n\t\t});\r\n\t}\r\n\r\n\tcomponentWillUnmount(){\r\n\t\tPubSub.unsubscribe(this.token);\r\n        PubSub.unsubscribe(this.token1);\r\n        PubSub.unsubscribe(this.token2);\r\n\t}\r\n\r\n    //获取添加的surveyData\r\n    getSurveyData = (surveyData) => {\r\n        //console.log(\"父组件收到传值\", surveyData);\r\n        this.setState({surveyData});\r\n    }\r\n    \r\n    //获取Complete Price Space和Max Renenue算法结果\r\n    getPSMRAlgResult = (res) => {\r\n        this.setState({\r\n            complete_ps: res.complete_price_space,\r\n            max_r: res.max_revenue,\r\n            price: res.price,\r\n        })\r\n    }\r\n\r\n    //获取输入的budget\r\n    getBudget = (budget) => {\r\n        //console.log(\"输入的budget\", budget);\r\n        this.setState({budget});\r\n    }\r\n\r\n    //获取选择的AMP算法\r\n    getAMPAlg = (ampAlg) => {\r\n        //console.log(\"选择的AMP算法\", ampAlg);\r\n        this.setState({ampAlg});\r\n    }\r\n\r\n    //AMP算法返回的结果\r\n    getAMPAlgResult = (ampAlgResult) => {\r\n        //console.log(\"AMP算法返回的结果\",ampAlgResult);\r\n        this.setState({ampAlgResult});\r\n    }\r\n\r\n    //格式化AMP算法参数\r\n    formAMPParams = () => {\r\n        const { price, budget, ampAlg, dataset, bp, ps } = this.state;\r\n        console.log(price, budget, ampAlg, dataset, bp, ps);\r\n        let ampParams = [];\r\n        if(!price || !dataset)\r\n            return ;\r\n        let eps = [], p = [];\r\n        price.map((item) => {\r\n            eps = [...eps, item[0]];\r\n            p = [...p, item[1]];\r\n        });\r\n        ampParams = {\r\n            dataset: dataset,\r\n            shapley_mode: ampAlg,\r\n            epsilon: eps,\r\n            price: p,\r\n            budget: budget,\r\n            bp: bp,\r\n            ps: ps\r\n        };\r\n        //console.log(\"AMP参数\",ampParams);\r\n        return ampParams;\r\n    }\r\n    \r\n    \r\n    render() {\r\n        \r\n        const { surveyData, max_r, ampAlgResult } = this.state;\r\n        const ampParams = this.formAMPParams();\r\n\r\n        return (\r\n            <div className={'panel'}>\r\n                \r\n                <EditableTable surveyData={ this.getSurveyData }/>\r\n\r\n                <PriceSandMaxRAlg surveyData={surveyData} psmrAlgResult={this.getPSMRAlgResult}/>\r\n\r\n                {/* <div style={{ margin:'9% auto 0'}}>\r\n                    <p className={'optionName'}>Price Space ：</p>\r\n                    <Image width={'90%'} src=\"./picture2.png\"/>\r\n                </div> */}\r\n\r\n                <FindOptimalPricing max_r={max_r}/>\r\n\r\n                <Divider orientation=\"middle\"></Divider>\r\n\r\n                <BrokerBudget budget={this.getBudget}/>\r\n\r\n                <div className={'singleDisplayGrid'}>\r\n                    <p className={'optionName'}>Choose Data Coverage Maximation Algorithm ：</p> \r\n                    <div style={{clear:'both'}}>\r\n                        <Row>\r\n                            <Col span={21}>\r\n                                <ChooseAMPAlg ampAlg={this.getAMPAlg}/>\r\n                            </Col>\r\n                            <Col span={3}>\r\n                                <RunAMPRAlg ampParams={ampParams} ampAlgResult={this.getAMPAlgResult}/>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </div>\r\n\r\n                <TrainedModel data={ampAlgResult}/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Button, message } from 'antd'\r\nimport axios from 'axios'\r\n\r\nexport default class SearchModel extends Component {\r\n\r\n    state = {\r\n        loading: false,\r\n    };\r\n\r\n    start = () => {\r\n        this.setState({ loading: true });\r\n        const { searchParams } = this.props;\r\n        //console.log(searchParams);\r\n        //console.log(\"searchParams\", searchParams);\r\n        for(let key in searchParams) {\r\n            if(searchParams[key]!==null && searchParams[key]!==0 && searchParams[key]!==undefined) {\r\n                this.modelExp(searchParams);\r\n                return ;\r\n            }   \r\n        }\r\n        this.modelAll();\r\n    };\r\n\r\n    modelAll = () => {\r\n        //console.log(\"modelAll\");\r\n        axios.get('http://47.114.83.154:8080/model/all').then(\r\n            response => {\r\n                //console.log(\"请求所有模型成功\",response.data.payload);\r\n                this.props.modelData(response.data.payload);\r\n                this.setState({ loading: false });\r\n            },\r\n            error => {\r\n                console.log(\"请求所有模型失败\");\r\n                this.setState({ loading: false });            \r\n            }\r\n        )\r\n    }\r\n\r\n    modelExp = (searchParams) => {\r\n        //console.log(\"modelExp\");\r\n        // const flag = this.judgeInput(searchParams);\r\n        // if(flag === false) {\r\n        //     this.setState({ loading: false });\r\n        //     return ;\r\n        // }\r\n        axios.post('http://47.114.83.154:8080/model/exp', {\r\n            \"dataset\": searchParams.dataset,\r\n            \"budget\": searchParams.budget,\r\n            \"covexp\": searchParams.covexp,\r\n            \"covsen\": searchParams.covsen,\r\n            \"noiexp\": searchParams.noiexp,\r\n            \"noisen\": searchParams.noisen,\r\n        }).then(\r\n            response => {\r\n                //console.log(\"请求预算内模型成功\", response.data.payload);\r\n                if(response.data.payload.length === 0)\r\n                    message.info(\"There is no model satisfied\");\r\n                this.props.modelData(response.data.payload);\r\n                this.setState({ loading: false });\r\n            },\r\n            error => {\r\n                console.log(\"请求预算内模型失败\");\r\n                this.setState({ loading: false });\r\n            }\r\n        )\r\n    }\r\n\r\n    judgeInput = (searchParams) => {\r\n        if(!searchParams.dataset) {\r\n            message.info(\"Please choose a dataset\");\r\n            return false;\r\n        }\r\n        if(!searchParams.budget || searchParams.budget===0) {\r\n            message.info(\"Please enter your total budget\");\r\n            return false;\r\n        }\r\n        if(!searchParams.covexp) {\r\n            message.info(\"Please enter your coverage expactation\");\r\n            return false;\r\n        }\r\n        if(!searchParams.covsen) {\r\n            message.info(\"Please enter your coverage sensitivity\");\r\n            return false;\r\n        }\r\n        if(!searchParams.noiexp) {\r\n            message.info(\"Please enter your noise expactation\");\r\n            return false;\r\n        }\r\n        if(!searchParams.noisen) {\r\n            message.info(\"Please enter your noise sensitivity\");\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n\r\n        const { loading } = this.state;\r\n\r\n        return (\r\n            <div className={'singleDisplayGrid'} style={{ margin:'11% auto'}}>\r\n                {/* <p className={'optionName'}>Max Revenue Algorithm  ：</p> */}\r\n                <Button type=\"primary\" className=\"colorBtn\" block loading={loading} onClick={this.start}>Search</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Table, Tag, Tooltip, Space, Button } from 'antd'\r\n\r\nconst columns = [\r\n    {\r\n        title: 'ID',\r\n        dataIndex: 'id',\r\n        key: 'id',\r\n        width: '10%',\r\n        \r\n        // render: text => <a>{text}</a>,\r\n    },\r\n    {\r\n        title: 'Epsilon',\r\n        dataIndex: 'epsilon',\r\n        key: 'epsilon',\r\n        width: '17%',\r\n        align: 'center',\r\n        ellipsis: {\r\n            showTitle: false,\r\n        },\r\n        render: value => (\r\n            <Tooltip placement=\"topLeft\" title={value}>\r\n                {value}\r\n            </Tooltip>\r\n        ),\r\n    },\r\n    {\r\n        title: 'Coverage',\r\n        dataIndex: 'coverage',\r\n        key: 'coverage',\r\n        width: '21%',\r\n        align: 'center',\r\n        ellipsis: {\r\n            showTitle: false,\r\n        },\r\n        render: value => (\r\n            <Tooltip placement=\"topLeft\" title={value}>\r\n                {value}\r\n            </Tooltip>\r\n        ),\r\n    },\r\n    {\r\n        title: 'Price',\r\n        dataIndex: 'price',\r\n        key: 'price',\r\n        width: '13%',\r\n        align: 'center',\r\n        ellipsis: {\r\n            showTitle: false,\r\n        },\r\n        render:(text, value) => {\r\n            <Tooltip placement=\"topLeft\" title={value}>\r\n                {value}\r\n            </Tooltip>\r\n            return '$ ' + text;\r\n        }\r\n    },\r\n    {\r\n        title: 'Suggestion',\r\n        key: 'suggestion',\r\n        dataIndex: 'suggestion',\r\n        width: '23%',\r\n        align: 'center',\r\n        render: (text, record) => (\r\n            <Tag color={ record.suggestion === 'true'? 'green':'volcano'} key={record.suggestion}>\r\n                {record.suggestion.toUpperCase()}\r\n            </Tag>\r\n        ),\r\n    },\r\n    {\r\n        title: 'Action',\r\n        key: 'action',\r\n        width: '15%',\r\n        align: 'center',\r\n        render: (text, record) => (\r\n            // <Space size={5}>\r\n                <a herf=\"javascript:void(0);\">Pay</a>\r\n                // /* <a herf=\"javascript:void(0);\" onClick={() => this.releaseModel(record.id)}>Release</a> */\r\n                // /* <Button type=\"link\" size=\"small\" >Download</Button>\r\n                // <Button type=\"link\" size=\"small\" onClick={() => this.releaseModel(record.id)}>Release</Button> */\r\n            // </Space>\r\n        ),\r\n    },\r\n];\r\n  \r\nconst data = [\r\n    {\r\n        key: '0',\r\n        id: '0',\r\n        coverage: 'model1',\r\n        epsilon: '1%',\r\n        price: '32',\r\n        suggestion: 'true',\r\n    },\r\n    {\r\n        key: '1',\r\n        id: '1',\r\n        epsilon: '20%',\r\n        coverage: 'model2',\r\n        price: '42',\r\n        suggestion: 'true',\r\n    },\r\n    {\r\n        key: '3',\r\n        id: '3',\r\n        coverage: 'model3',\r\n        epsilon: '91%',\r\n        price: '87',\r\n        suggestion: 'false',\r\n    },\r\n];\r\n\r\nexport default class ModelData extends Component {\r\n\r\n    handleData = () => {\r\n        const { modelData } = this.props;\r\n        let handled = [];\r\n        modelData.map((item) => {\r\n            item.suggestion === true ?\r\n            handled = [...handled, {\r\n                id: item.id,\r\n                epsilon: item.epsilon,\r\n                coverage: item.coverage,\r\n                price: item.price,\r\n                suggestion: 'true',\r\n            }] :\r\n            handled = [...handled, {\r\n                id: item.id,\r\n                epsilon: item.epsilon,\r\n                coverage: item.coverage,\r\n                price: item.price,\r\n                suggestion: 'false',\r\n            }];\r\n        })\r\n        return handled;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const handled = this.handleData();\r\n\r\n        return (\r\n            <div style={{margin:'9% auto 0'}}>\r\n                <p className={'optionName'}>Trained Models :</p>\r\n                <Table columns={columns} dataSource={ handled } size='small'/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { InputNumber } from 'antd'\r\n\r\nexport default class CoverageExpt extends Component {\r\n\r\n    onChange = (value) => {\r\n        this.props.coverageExpt(value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={'singleDisplayGrid'} style={{textAlign:'center'}}>\r\n                <p className={'optionName'}>Coverage Expectation ：</p>\r\n                <InputNumber allowClear style={{ width: '100%' }} min={0} step={0.01}\r\n                    onChange={this.onChange} placeholder='Enter Your Coverage Expectation'/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { InputNumber } from 'antd'\r\n\r\nexport default class CoverageSens extends Component {\r\n\r\n    onChange = (value) => {\r\n        this.props.coverageSens(value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={'singleDisplayGrid'} style={{textAlign:'center'}}>\r\n                <p className={'optionName'}>Coverage Sensitivity ：</p>\r\n                <InputNumber allowClear style={{ width: '100%' }} min={0} step={0.01} \r\n                    onChange={this.onChange} placeholder='Enter Your Coverage Sensitivity'/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { InputNumber } from 'antd'\r\n\r\nexport default class NoiseExpt extends Component {\r\n\r\n    onChange = (value) => {\r\n        this.props.noiseExpt(value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={'singleDisplayGrid'} style={{textAlign:'center'}}>\r\n                <p className={'optionName'}>Noise Expectation ：</p>\r\n                <InputNumber allowClear style={{ width: '100%' }} min={0} step={0.01} \r\n                    onChange={this.onChange} placeholder='Enter Your Noise Expectation'/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { InputNumber } from 'antd'\r\n\r\nexport default class NoiseSens extends Component {\r\n\r\n    onChange = (value) => {\r\n        this.props.noiseSens(value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={'singleDisplayGrid'} style={{textAlign:'center'}}>\r\n                <p className={'optionName'}>Noise Sensitivity ：</p>\r\n                <InputNumber allowClear style={{ width: '100%' }} min={0} step={0.01}\r\n                    onChange={this.onChange} placeholder='Enter Your Noise Sensitivity'/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { InputNumber } from 'antd'\r\n\r\nexport default class TotalBudget extends Component {\r\n\r\n    onChange = (value) => {\r\n        this.props.totalBudget(value);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className={'singleDisplayGrid'} style={{textAlign:'center'}}>\r\n                <p className={'optionName'}>Total Budget ：</p>\r\n                <InputNumber allowClear style={{ width: '100%' }} min={0} step={0.01} precision={2}\r\n                    formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                    parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n                    onChange={this.onChange} placeholder='Enter Your Budget'/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Divider } from 'antd'\r\nimport ChooseDataset from '../ChooseDataset/ChooseDataset'\r\nimport SearchModel from './SearchModel/SearchModel'\r\nimport ModelData from './ModelData/ModelData'\r\nimport CoverageExpt from './CoverageExpt/CoverageExpt'\r\nimport CoverageSens from './CoverageSens/CoverageSens'\r\nimport NoiseExpt from './NoiseExpt/NoiseExpt'\r\nimport NoiseSens from './NoiseSens/NoiseSens'\r\nimport TotalBudget from './TotalBudget/TotalBudget'\r\n\r\nexport default class Buyer extends Component {\r\n\r\n    state = {\r\n        chosenDataset: null,\r\n        coverageExpt: null,\r\n        coverageSens: null,\r\n        noiseExpt: null,\r\n        noiseSens: null,\r\n        totalBudget: null,\r\n        modelData: [],\r\n    }\r\n\r\n    //接收组件返回的数据集名称\r\n    getChosenDataset = (chosenDataset) => {\r\n        this.setState({chosenDataset});\r\n        //console.log('ChooseDataset组件返回的数据集', chosenDataset);\r\n    }\r\n    \r\n    getCoverageExpt = (coverageExpt) => {\r\n        this.setState({coverageExpt});\r\n    }\r\n        \r\n    getCoverageSens = (coverageSens) => {\r\n        this.setState({coverageSens});\r\n    }\r\n        \r\n    getNoiseExpt = (noiseExpt) => {\r\n        this.setState({noiseExpt});\r\n    }\r\n        \r\n    getNoiseSens = (noiseSens) => {\r\n        this.setState({noiseSens});\r\n    }\r\n        \r\n    getTotalBudget = (totalBudget) => {\r\n        this.setState({totalBudget});\r\n    }\r\n\r\n    getModelData = (modelData) => {\r\n        this.setState({modelData});\r\n    }\r\n\r\n    formSearchParams = () => {\r\n        const { chosenDataset, coverageExpt, coverageSens, noiseExpt, noiseSens, totalBudget } = this.state;\r\n        const searchParams = {\r\n            dataset: chosenDataset,\r\n            budget: totalBudget,\r\n            covexp: coverageExpt,\r\n            covsen: coverageSens,\r\n            noiexp: noiseExpt,\r\n            noisen: noiseSens\r\n        }\r\n        return searchParams;\r\n    }\r\n\r\n    render() {\r\n\r\n        const searchParams = this.formSearchParams();\r\n        const { modelData } = this.state;\r\n\r\n        return (\r\n            <div className={'panel'}>\r\n\r\n                <ChooseDataset chosenDataset={this.getChosenDataset}/>\r\n\r\n                <TotalBudget totalBudget={this.getTotalBudget}/>\r\n\r\n                <CoverageExpt coverageExpt={this.getCoverageExpt}/>\r\n\r\n                <CoverageSens coverageSens={this.getCoverageSens}/>\r\n\r\n                <NoiseExpt noiseExpt={this.getNoiseExpt}/>\r\n\r\n                <NoiseSens noiseSens={this.getNoiseSens}/>\r\n\r\n                <SearchModel searchParams={searchParams} modelData={this.getModelData}/>\r\n\r\n                <Divider orientation=\"middle\"></Divider>\r\n\r\n                <ModelData modelData={modelData} />\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\nimport { Row, Col, Card } from 'antd'\nimport Owner from './components/Owner/Owner'\nimport Broker from './components/Broker/Broker'\nimport Buyer from './components/Buyer/Buyer'\nimport 'antd/dist/antd.css'\nimport './App.css'\n\nexport default class App extends Component {\n\n    render() {\n\n        return (\n\n            <div className=\"App\">\n                \n                <Row gutter={12}>\n                    <Col span={8}>\n                        <Card title=\"Owner\" className=\"cardTop\" bordered={false}\n                            headStyle={{backgroundColor:'#979797',color:'white'}} >\n                            <Owner/>\n                        </Card>\n                        <Card title=\"Owner\" className=\"cardBottom\" bordered={false}\n                            headStyle={{backgroundColor:'#979797',color:'white'}}\n                            bodyStyle={{border:\"1px solid #979797\",display:\"none\"}}>\n                        </Card>\n                    </Col>\n                    <Col span={8}>\n                        <Card title=\"Broker\" className=\"cardTop\" bordered={false}\n                            headStyle={{backgroundColor:'#979797',color:'white'}} >\n                            <Broker/>\n                        </Card>\n                        <Card title=\"Broker\" className=\"cardBottom\" bordered={false}\n                            headStyle={{backgroundColor:'#979797',color:'white'}}\n                            bodyStyle={{border:\"1px solid #979797\",display:\"none\"}} >\n                        </Card>\n                    </Col>\n                    <Col span={8}>\n                        <Card title=\"Buyer\" className=\"cardTop\" bordered={false} \n                            headStyle={{backgroundColor:'#979797',color:'white'}} >\n                            <Buyer/>\n                        </Card>\n                        <Card title=\"Buyer\" className=\"cardBottom\" bordered={false}\n                            headStyle={{backgroundColor:'#979797',color:'white'}}\n                            bodyStyle={{border:\"1px solid #979797\",display:\"none\"}} >\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n    \n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import { BrowserRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        {/* <BrowserRouter> */}\n            <App />\n        {/* </BrowserRouter> */}\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}